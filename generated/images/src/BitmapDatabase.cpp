// 4.13.0 dither_algorithm=2 alpha_dither=yes layout_rotation=90 opaque_image_format=RGB888 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0x34d5cf43
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <platform/driver/lcd/LCD24bpp.hpp>

extern const unsigned char _backimage[]; // BITMAP_BACKIMAGE_ID = 0, Size: 480x800 pixels
extern const unsigned char _button1[]; // BITMAP_BUTTON1_ID = 1, Size: 59x59 pixels
extern const unsigned char _button1_press[]; // BITMAP_BUTTON1_PRESS_ID = 2, Size: 59x59 pixels
extern const unsigned char _button2[]; // BITMAP_BUTTON2_ID = 3, Size: 59x59 pixels
extern const unsigned char _button2_press[]; // BITMAP_BUTTON2_PRESS_ID = 4, Size: 59x59 pixels
extern const unsigned char _button3[]; // BITMAP_BUTTON3_ID = 5, Size: 59x59 pixels
extern const unsigned char _button3_press[]; // BITMAP_BUTTON3_PRESS_ID = 6, Size: 59x59 pixels
extern const unsigned char _button4[]; // BITMAP_BUTTON4_ID = 7, Size: 59x59 pixels
extern const unsigned char _button4_press[]; // BITMAP_BUTTON4_PRESS_ID = 8, Size: 59x59 pixels
extern const unsigned char _left[]; // BITMAP_LEFT_ID = 9, Size: 59x59 pixels
extern const unsigned char _right[]; // BITMAP_RIGHT_ID = 10, Size: 59x59 pixels
extern const unsigned char _run[]; // BITMAP_RUN_ID = 11, Size: 33x34 pixels
extern const unsigned char _run_press[]; // BITMAP_RUN_PRESS_ID = 12, Size: 33x34 pixels
extern const unsigned char _smallback[]; // BITMAP_SMALLBACK_ID = 13, Size: 180x180 pixels
extern const unsigned char _smallback2[]; // BITMAP_SMALLBACK2_ID = 14, Size: 180x180 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _backimage, 0, 480, 800, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 800, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _button1, 0, 59, 59, 12, 26, 31, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button1_press, 0, 59, 59, 9, 8, 41, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 43, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button2, 0, 59, 59, 31, 25, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button2_press, 0, 59, 59, 9, 8, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button3, 0, 59, 59, 22, 21, 15, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button3_press, 0, 59, 59, 9, 8, 41, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button4, 0, 59, 59, 28, 14, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button4_press, 0, 59, 59, 9, 8, 41, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 43, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _left, 0, 59, 59, 37, 24, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 11, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _right, 0, 59, 59, 32, 24, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 11, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _run, 0, 33, 34, 2, 8, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _run_press, 0, 33, 34, 8, 12, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 11, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _smallback, 0, 180, 180, 0, 0, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _smallback2, 0, 180, 180, 0, 0, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
